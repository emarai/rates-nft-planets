{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2fB4560D1921D54b3d7fFA07bb1678A8C59C1e0E",
    "txHash": "0xea79f9f902702e7bc291b8643e2715dd5ba450b73d4616140e7b0541ce219ca0"
  },
  "proxies": [
    {
      "address": "0xd3612Eb225F4d814b1Fd7298BFBEb8F7d8Bc6CBb",
      "txHash": "0xee725f3e3d8702c6dc2d7000c787243f374c45996ce6bdb0260057b7bb7f5b19",
      "kind": "transparent"
    }
  ],
  "impls": {
    "3b61e4506d5a2af98f4fd0a017b96bbed4a1654b39c3e6f4f5b759d76c9bed71": {
      "address": "0x3c7F84C52Af08a093A747A5f06594666Da6b5d50",
      "txHash": "0x48e9aa024bafd147087ccc5d96963c6c93cdfacf38e14b3818665bd791523eaf",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "challengeNumber",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:17"
          },
          {
            "label": "difficulty",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:20"
          },
          {
            "label": "tokensMinted",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:23"
          },
          {
            "label": "statistics",
            "offset": 0,
            "slot": "3",
            "type": "t_struct(Statistics)4424_storage",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:33"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "7",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "7",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "108",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "109",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "114",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "currentTokenId",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:12"
          },
          {
            "label": "baseUri",
            "offset": 0,
            "slot": "159",
            "type": "t_string_storage",
            "contract": "Planets",
            "src": "src/Planets.sol:13"
          },
          {
            "label": "totalERSupply",
            "offset": 0,
            "slot": "160",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:17"
          },
          {
            "label": "digestForTokenId",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "Planets",
            "src": "src/Planets.sol:20"
          },
          {
            "label": "epochCount",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:21"
          },
          {
            "label": "latestDifficultyPeriodStarted",
            "offset": 0,
            "slot": "163",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:24"
          },
          {
            "label": "rewardEra",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:34"
          },
          {
            "label": "totalRtsPerEra",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:36"
          },
          {
            "label": "miningRigUpgradePrice",
            "offset": 0,
            "slot": "166",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:40"
          },
          {
            "label": "maximumRigLevel",
            "offset": 0,
            "slot": "167",
            "type": "t_uint8",
            "contract": "Planets",
            "src": "src/Planets.sol:41"
          },
          {
            "label": "miningRigPercentage",
            "offset": 0,
            "slot": "168",
            "type": "t_array(t_uint8)dyn_storage",
            "contract": "Planets",
            "src": "src/Planets.sol:42"
          },
          {
            "label": "miningRigForAddress",
            "offset": 0,
            "slot": "169",
            "type": "t_mapping(t_address,t_uint8)",
            "contract": "Planets",
            "src": "src/Planets.sol:43"
          },
          {
            "label": "rtsBonusForTokenId",
            "offset": 0,
            "slot": "170",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Planets",
            "src": "src/Planets.sol:44"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "171",
            "type": "t_address",
            "contract": "Planets",
            "src": "src/Planets.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Statistics)4424_storage": {
            "label": "struct AbstractERC918.Statistics",
            "members": [
              {
                "label": "lastRewardTo",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastRewardAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRewardEthBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastRewardTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8aa1731176b3959513592cfadffbae758215d1c90dd18bad81d9f5ee2ffa01ed": {
      "address": "0x0285cc38E2D5dE2bd0A79654b79C9D6d4F186797",
      "txHash": "0x0d77d7459d167e227508987bf3a6360fecc7bbdb1e0d03b0f8c0a5b67d22aa4f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "challengeNumber",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:17"
          },
          {
            "label": "difficulty",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:20"
          },
          {
            "label": "tokensMinted",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:23"
          },
          {
            "label": "statistics",
            "offset": 0,
            "slot": "3",
            "type": "t_struct(Statistics)4424_storage",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:33"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "7",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "7",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "108",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "109",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "114",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "currentTokenId",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:12"
          },
          {
            "label": "baseUri",
            "offset": 0,
            "slot": "159",
            "type": "t_string_storage",
            "contract": "Planets",
            "src": "src/Planets.sol:13"
          },
          {
            "label": "totalERSupply",
            "offset": 0,
            "slot": "160",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:17"
          },
          {
            "label": "digestForTokenId",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "Planets",
            "src": "src/Planets.sol:20"
          },
          {
            "label": "epochCount",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:21"
          },
          {
            "label": "latestDifficultyPeriodStarted",
            "offset": 0,
            "slot": "163",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:24"
          },
          {
            "label": "rewardEra",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:34"
          },
          {
            "label": "totalRtsPerEra",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:36"
          },
          {
            "label": "miningRigUpgradePrice",
            "offset": 0,
            "slot": "166",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:40"
          },
          {
            "label": "maximumRigLevel",
            "offset": 0,
            "slot": "167",
            "type": "t_uint8",
            "contract": "Planets",
            "src": "src/Planets.sol:41"
          },
          {
            "label": "miningRigPercentage",
            "offset": 0,
            "slot": "168",
            "type": "t_array(t_uint8)dyn_storage",
            "contract": "Planets",
            "src": "src/Planets.sol:42"
          },
          {
            "label": "miningRigForAddress",
            "offset": 0,
            "slot": "169",
            "type": "t_mapping(t_address,t_uint8)",
            "contract": "Planets",
            "src": "src/Planets.sol:43"
          },
          {
            "label": "rtsBonusForTokenId",
            "offset": 0,
            "slot": "170",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Planets",
            "src": "src/Planets.sol:44"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "171",
            "type": "t_address",
            "contract": "Planets",
            "src": "src/Planets.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Statistics)4424_storage": {
            "label": "struct AbstractERC918.Statistics",
            "members": [
              {
                "label": "lastRewardTo",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastRewardAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRewardEthBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastRewardTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "751573df4b6844c0275dbca5e5528c08da951fbb5c5e0d796a1f0382a3aff623": {
      "address": "0xE1C83eCdfb5D1D9D2fcFb6d9F6b14ac10e0468dD",
      "txHash": "0x9cae787751c606698b0a092b2d96fb07f3d0dba952d441f3306161c916613a5b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "challengeNumber",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:17"
          },
          {
            "label": "difficulty",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:20"
          },
          {
            "label": "tokensMinted",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:23"
          },
          {
            "label": "statistics",
            "offset": 0,
            "slot": "3",
            "type": "t_struct(Statistics)4424_storage",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:33"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "7",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "7",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "108",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "109",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "114",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "currentTokenId",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:12"
          },
          {
            "label": "baseUri",
            "offset": 0,
            "slot": "159",
            "type": "t_string_storage",
            "contract": "Planets",
            "src": "src/Planets.sol:13"
          },
          {
            "label": "totalERSupply",
            "offset": 0,
            "slot": "160",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:17"
          },
          {
            "label": "digestForTokenId",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "Planets",
            "src": "src/Planets.sol:20"
          },
          {
            "label": "epochCount",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:21"
          },
          {
            "label": "latestDifficultyPeriodStarted",
            "offset": 0,
            "slot": "163",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:24"
          },
          {
            "label": "rewardEra",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:34"
          },
          {
            "label": "totalRtsPerEra",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:36"
          },
          {
            "label": "miningRigUpgradePrice",
            "offset": 0,
            "slot": "166",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:40"
          },
          {
            "label": "maximumRigLevel",
            "offset": 0,
            "slot": "167",
            "type": "t_uint8",
            "contract": "Planets",
            "src": "src/Planets.sol:41"
          },
          {
            "label": "miningRigPercentage",
            "offset": 0,
            "slot": "168",
            "type": "t_array(t_uint8)dyn_storage",
            "contract": "Planets",
            "src": "src/Planets.sol:42"
          },
          {
            "label": "miningRigForAddress",
            "offset": 0,
            "slot": "169",
            "type": "t_mapping(t_address,t_uint8)",
            "contract": "Planets",
            "src": "src/Planets.sol:43"
          },
          {
            "label": "rtsBonusForTokenId",
            "offset": 0,
            "slot": "170",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Planets",
            "src": "src/Planets.sol:44"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "171",
            "type": "t_address",
            "contract": "Planets",
            "src": "src/Planets.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Statistics)4424_storage": {
            "label": "struct AbstractERC918.Statistics",
            "members": [
              {
                "label": "lastRewardTo",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastRewardAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRewardEthBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastRewardTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bdcefb3e12fa31704885c8e0bb012010233ca40de37a53ebcf888e3071f55733": {
      "address": "0x73050421FacE5eB8ad64c39F2894FEA67f7a0b2E",
      "txHash": "0xef322fc4c42d5ffda819773aa2492b7a3e6f54388c95ae40188479b5c7ea49e4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "challengeNumber",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:17"
          },
          {
            "label": "difficulty",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:20"
          },
          {
            "label": "tokensMinted",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:23"
          },
          {
            "label": "statistics",
            "offset": 0,
            "slot": "3",
            "type": "t_struct(Statistics)4424_storage",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:33"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "7",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "7",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "108",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "109",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "114",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "currentTokenId",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:12"
          },
          {
            "label": "baseUri",
            "offset": 0,
            "slot": "159",
            "type": "t_string_storage",
            "contract": "Planets",
            "src": "src/Planets.sol:13"
          },
          {
            "label": "totalERSupply",
            "offset": 0,
            "slot": "160",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:17"
          },
          {
            "label": "digestForTokenId",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "Planets",
            "src": "src/Planets.sol:20"
          },
          {
            "label": "epochCount",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:21"
          },
          {
            "label": "latestDifficultyPeriodStarted",
            "offset": 0,
            "slot": "163",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:24"
          },
          {
            "label": "rewardEra",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:34"
          },
          {
            "label": "totalRtsPerEra",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:36"
          },
          {
            "label": "miningRigUpgradePrice",
            "offset": 0,
            "slot": "166",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:40"
          },
          {
            "label": "maximumRigLevel",
            "offset": 0,
            "slot": "167",
            "type": "t_uint8",
            "contract": "Planets",
            "src": "src/Planets.sol:41"
          },
          {
            "label": "miningRigPercentage",
            "offset": 0,
            "slot": "168",
            "type": "t_array(t_uint8)dyn_storage",
            "contract": "Planets",
            "src": "src/Planets.sol:42"
          },
          {
            "label": "miningRigForAddress",
            "offset": 0,
            "slot": "169",
            "type": "t_mapping(t_address,t_uint8)",
            "contract": "Planets",
            "src": "src/Planets.sol:43"
          },
          {
            "label": "rtsBonusForTokenId",
            "offset": 0,
            "slot": "170",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Planets",
            "src": "src/Planets.sol:44"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "171",
            "type": "t_address",
            "contract": "Planets",
            "src": "src/Planets.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Statistics)4424_storage": {
            "label": "struct AbstractERC918.Statistics",
            "members": [
              {
                "label": "lastRewardTo",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastRewardAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRewardEthBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastRewardTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d6c49ada26362a487e4156d74c67376cc04b4fb6e83f166dc22ec9029c9ce8b1": {
      "address": "0x2dE56CD8A6Ee6F1810e3eCc0Bbd1933176a67e67",
      "txHash": "0x738c4d4f1004329e6f4587a291506eaee734a1e1b8c2d425ad99313effdb4f59",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "challengeNumber",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:17"
          },
          {
            "label": "difficulty",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:20"
          },
          {
            "label": "tokensMinted",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:23"
          },
          {
            "label": "statistics",
            "offset": 0,
            "slot": "3",
            "type": "t_struct(Statistics)4424_storage",
            "contract": "AbstractERC918",
            "src": "src/AbstractERC918.sol:33"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "7",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "7",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "108",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "109",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "114",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "currentTokenId",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:12"
          },
          {
            "label": "baseUri",
            "offset": 0,
            "slot": "159",
            "type": "t_string_storage",
            "contract": "Planets",
            "src": "src/Planets.sol:13"
          },
          {
            "label": "totalERSupply",
            "offset": 0,
            "slot": "160",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:17"
          },
          {
            "label": "digestForTokenId",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "Planets",
            "src": "src/Planets.sol:20"
          },
          {
            "label": "epochCount",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:21"
          },
          {
            "label": "latestDifficultyPeriodStarted",
            "offset": 0,
            "slot": "163",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:24"
          },
          {
            "label": "rewardEra",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:34"
          },
          {
            "label": "totalRtsPerEra",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:36"
          },
          {
            "label": "miningRigUpgradePrice",
            "offset": 0,
            "slot": "166",
            "type": "t_uint256",
            "contract": "Planets",
            "src": "src/Planets.sol:40"
          },
          {
            "label": "maximumRigLevel",
            "offset": 0,
            "slot": "167",
            "type": "t_uint8",
            "contract": "Planets",
            "src": "src/Planets.sol:41"
          },
          {
            "label": "miningRigPercentage",
            "offset": 0,
            "slot": "168",
            "type": "t_array(t_uint8)dyn_storage",
            "contract": "Planets",
            "src": "src/Planets.sol:42"
          },
          {
            "label": "miningRigForAddress",
            "offset": 0,
            "slot": "169",
            "type": "t_mapping(t_address,t_uint8)",
            "contract": "Planets",
            "src": "src/Planets.sol:43"
          },
          {
            "label": "rtsBonusForTokenId",
            "offset": 0,
            "slot": "170",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Planets",
            "src": "src/Planets.sol:44"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "171",
            "type": "t_address",
            "contract": "Planets",
            "src": "src/Planets.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Statistics)4424_storage": {
            "label": "struct AbstractERC918.Statistics",
            "members": [
              {
                "label": "lastRewardTo",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastRewardAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRewardEthBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastRewardTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
